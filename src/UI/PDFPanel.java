/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.ImageIcon;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.rendering.PDFRenderer;

/**
 *
 * @author chrisrk192
 */
public class PDFPanel extends javax.swing.JPanel {
    public PDDocument document;
    public String selected;
    public int pageNum;
    /**
     * Creates new form PDFPanel
     */
    public PDFPanel() {
        pageNum = 0;
        selected = "";
        initComponents();
    }
    
    public void setPDFList(ComboBoxModel<String> pdfs){
        pdfList.setModel(pdfs);
    }
    public void closeDoc(){
        if(document != null){
            try {
                document.close();
            } catch (IOException ex) {
                Logger.getLogger(PDFPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        pdfList = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        imagePane = new javax.swing.JScrollPane();
        imageLabel = new javax.swing.JLabel();
        previousPageButton = new javax.swing.JButton();
        nextPageButton = new javax.swing.JButton();
        pageInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setText("View File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pdfList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Open File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pdfList, 0, 600, Short.MAX_VALUE)
                .addGap(52, 52, 52)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pdfList)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imagePane.setViewportView(imageLabel);

        previousPageButton.setText("<");
        previousPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageButtonActionPerformed(evt);
            }
        });

        nextPageButton.setText(">");
        nextPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPageButtonActionPerformed(evt);
            }
        });

        pageInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pageInput.setText("0");
        pageInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageInputActionPerformed(evt);
            }
        });
        pageInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pageInputKeyTyped(evt);
            }
        });

        jLabel2.setText("Tip: By moving PDF files to ");

        jButton3.setText("this");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("folder, you can quickly reference them.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePane)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(previousPageButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextPageButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previousPageButton)
                    .addComponent(nextPageButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePane, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        String temp = pdfList.getItemAt(pdfList.getSelectedIndex());
        if(temp.compareTo(selected)!=0){
            selected = temp;
            try {
                if(document != null)
                    document.close();
            } catch (IOException ex) {
                Logger.getLogger(PDFPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            document = null;
        }
            
        //ShowPDF(Data.IO.pdfsDir+"/"+selected+".pdf");
        if(document == null)
            try{
                File file = new File(Data.IO.pdfsDir+"/"+selected+".pdf");

                document = PDDocument.load(file);
                PDFRenderer renderer = new PDFRenderer(document);
                Image image = renderer.renderImage(pageNum);
                image = renderer.renderImage(pageNum, (float)imagePane.getWidth()/image.getWidth(previousPageButton));
                ImageIcon imageIcon = new ImageIcon(image);
                imageLabel.setIcon(imageIcon);

                imageIcon = new ImageIcon(image);
                imageLabel.setIcon(imageIcon);

                imagePane.getVerticalScrollBar().setUnitIncrement(16);
                //document.close();
                imagePane.validate();

            } catch(IOException e){
                System.err.println("IOException in open pdf");
            }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void pageInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pageInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pageInputActionPerformed

    private void nextPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPageButtonActionPerformed
        // TODO add your handling code here:
        if(document != null){
            pageNum++;
            PDFRenderer renderer = new PDFRenderer(document);
            Image image;
            try {
                image = renderer.renderImage(pageNum);
                image = renderer.renderImage(pageNum, (float)imagePane.getWidth()/image.getWidth(previousPageButton));
                ImageIcon imageIcon = new ImageIcon(image);
                imageLabel.setIcon(imageIcon);

                imageIcon = new ImageIcon(image);
                imageLabel.setIcon(imageIcon);

                imagePane.getVerticalScrollBar().setUnitIncrement(16);
                //document.close();
                pageInput.setText(pageNum+"");
                imagePane.validate();
            } catch (IOException ex) {
                Logger.getLogger(PDFPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_nextPageButtonActionPerformed

    private void previousPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousPageButtonActionPerformed
        // TODO add your handling code here:
        if(document != null){
            if(pageNum > 0)
                pageNum--;
            PDFRenderer renderer = new PDFRenderer(document);
            Image image;
            try {
                image = renderer.renderImage(pageNum);
                image = renderer.renderImage(pageNum, (float)imagePane.getWidth()/image.getWidth(previousPageButton));
                ImageIcon imageIcon = new ImageIcon(image);
                imageLabel.setIcon(imageIcon);

                imageIcon = new ImageIcon(image);
                imageLabel.setIcon(imageIcon);

                imagePane.getVerticalScrollBar().setUnitIncrement(16);
                //document.close();
                pageInput.setText(pageNum+"");
                imagePane.validate();
            } catch (IOException ex) {
                Logger.getLogger(PDFPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_previousPageButtonActionPerformed

    private void pageInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pageInputKeyTyped
        // TODO add your handling code here:
        int i;
        try{
            i = Integer.parseInt(pageInput.getText());
            i--;
            if(i < 0)
                i = 0;
        }catch(NumberFormatException e){return;}
        pageNum = i;
                    
        //ShowPDF(Data.IO.pdfsDir+"/"+selected+".pdf");
        
        try{
            File file = new File(Data.IO.pdfsDir+"/"+selected+".pdf");

            document = PDDocument.load(file);
            PDFRenderer renderer = new PDFRenderer(document);
            Image image = renderer.renderImage(pageNum);
            image = renderer.renderImage(pageNum, (float)imagePane.getWidth()/image.getWidth(previousPageButton));
            ImageIcon imageIcon = new ImageIcon(image);
            imageLabel.setIcon(imageIcon);

            imageIcon = new ImageIcon(image);
            imageLabel.setIcon(imageIcon);

            imagePane.getVerticalScrollBar().setUnitIncrement(16);
            //document.close();
            imagePane.validate();

        } catch(IOException e){
            System.err.println("IOException in open pdf");
        }
    }//GEN-LAST:event_pageInputKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if (Desktop.isDesktopSupported()) {
        try {
            File myFile = new File(Data.IO.pdfsDir+"/"+selected+".pdf");
            Desktop.getDesktop().open(myFile);
        } catch (IOException ex) {
            // no application registered for PDFs
        }


        /* Not quite working
        class PfdFrame extends JFrame{
            private JTabbedPane tabbedPane;

            public PfdFrame() {
                PDFViewer x=new PDFViewer(url);
                tabbedPane = new JTabbedPane(JTabbedPane.TOP);

                tabbedPane.add(x, BorderLayout.WEST);
                tabbedPane.setTitleAt(0, "Start");
                setContentPane(x);
            }
        }
        PfdFrame frame=new PfdFrame();
                frame.setExtendedState(Frame.MAXIMIZED_BOTH);
                //frame.setLocation(0,0);
                frame.setVisible(true);
                frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        */
    }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Desktop desktop = Desktop.getDesktop();
        //File dirToOpen = null;
        try {
            String path = DataManager.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath().replace("/DND.jar", "").substring(1).replace("/", "\\")+"\\save\\pdfs";  

                System.out.println("PATH: "+path);
                Runtime runtime = Runtime.getRuntime();
                runtime.exec("explorer.exe "+path);
                System.out.println("open");
            } catch (Exception E) {
                System.out.println("File Not Found");
            }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imageLabel;
    private javax.swing.JScrollPane imagePane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton nextPageButton;
    private javax.swing.JTextField pageInput;
    private javax.swing.JComboBox<String> pdfList;
    private javax.swing.JButton previousPageButton;
    // End of variables declaration//GEN-END:variables
}
